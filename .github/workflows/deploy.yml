name: Deploy React App to VM

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install

    - name: Build React app
      run: npm run build

    - name: Clean target folder on VM
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.VM_HOST }}
        username: ${{ secrets.VM_USERNAME }}
        password: ${{ secrets.VM_PASSWORD }}
        script: |
          sudo rm -rf /home/azureuser/localevent_workshops
          sudo mkdir -p /home/azureuser/localevent_workshops
          sudo chown -R $USER:$USER /home/azureuser/localevent_workshops
          sudo chmod -R 755 /home/azureuser/localevent_workshops

    - name: Debug build folder
      run: |
        echo "Listing build directories..."
        ls -al
        if [ -d "build" ]; then
          echo "✅ Found build/ directory"
        elif [ -d "dist" ]; then
          echo "✅ Found dist/ directory"
        else
          echo "❌ No build output found!"
          exit 1
        fi

    - name: Copy build folder to VM
      uses: appleboy/scp-action@v0.1.5
      with:
        host: ${{ secrets.VM_HOST }}
        username: ${{ secrets.VM_USERNAME }}
        password: ${{ secrets.VM_PASSWORD }}
        source: "dist/*,build/*"
        target: "/home/azureuser/localevent_workshops/"
        strip_components: 1

    - name: Set ownership for Nginx
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.VM_HOST }}
        username: ${{ secrets.VM_USERNAME }}
        password: ${{ secrets.VM_PASSWORD }}
        script: |
          sudo chown -R www-data:www-data /home/azureuser/localevent_workshops
          sudo chmod -R 755 /home/azureuser/localevent_workshops
          sudo chmod +x /home/azureuser

    - name: Configure Nginx and restart
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.VM_HOST }}
        username: ${{ secrets.VM_USERNAME }}
        password: ${{ secrets.VM_PASSWORD }}
        script: |
          # Create Nginx config for port 3001
          sudo tee /etc/nginx/sites-available/localevent-workshops > /dev/null << 'EOF'
          server {
              listen 3001;
              server_name _;

              root /home/azureuser/localevent_workshops;
              index index.html;

              location / {
                  try_files $uri /index.html;
              }

              location /assets/ {
                  root /home/azureuser/localevent_workshops;
                  access_log off;
                  log_not_found off;
              }

              location /health {
                  return 200 "Localevent Workshops OK";
                  add_header Content-Type text/plain;
              }

              error_log /var/log/nginx/localevent-workshops-error.log;
              access_log /var/log/nginx/localevent-workshops-access.log;
          }
          EOF

          # Enable site and restart nginx
          sudo ln -sf /etc/nginx/sites-available/localevent-workshops /etc/nginx/sites-enabled/
          sudo nginx -t
          sudo systemctl restart nginx

          echo "✅ Deployment complete! Check http://$(curl -s ifconfig.me):3001/"
